/**
 * üßπ Supabase Edge Function: cleanup-resumes
 * Deletes old resume files older than 90 days
 * Sends weekly summary email using SendGrid
 */

import { createClient } from "https://esm.sh/@supabase/supabase-js@2";

// Load environment variables
const SUPABASE_URL = Deno.env.get("PROJECT_URL")!;
const SERVICE_ROLE_KEY = Deno.env.get("SERVICE_ROLE_KEY")!;
const SENDGRID_API_KEY = Deno.env.get("SENDGRID_API_KEY")!;
const FROM_EMAIL = Deno.env.get("FROM_EMAIL") ?? "info.techrayos@gmail.com";
const ADMIN_EMAIL = Deno.env.get("COMPANY_EMAIL") ?? "info.techrayos@gmail.com";

const supabase = createClient(SUPABASE_URL, SERVICE_ROLE_KEY);

// Delete files older than this many days
const EXPIRE_DAYS = 90;

Deno.serve(async (_req) => {
  try {
    const cutoffDate = new Date();
    cutoffDate.setDate(cutoffDate.getDate() - EXPIRE_DAYS);

    console.log(`üßπ Checking for resumes older than ${EXPIRE_DAYS} days (${cutoffDate.toISOString()})`);

    // 1Ô∏è‚É£ List all files in the "resumes" bucket
    const { data: files, error: listError } = await supabase.storage
      .from("resumes")
      .list("", { limit: 1000 });

    if (listError) throw listError;

    if (!files || files.length === 0) {
      console.log("‚úÖ No resumes found in the bucket.");
      await sendEmailSummary(0, []);
      return new Response(JSON.stringify({ deleted: 0 }), {
        headers: { "Content-Type": "application/json" },
      });
    }

    // 2Ô∏è‚É£ Filter files older than cutoff date
    const oldFiles = files.filter((file) => new Date(file.created_at) < cutoffDate);

    if (oldFiles.length === 0) {
      console.log("‚úÖ No old resumes to delete.");
      await sendEmailSummary(0, []);
      return new Response(JSON.stringify({ deleted: 0 }), {
        headers: { "Content-Type": "application/json" },
      });
    }

    // 3Ô∏è‚É£ Delete old files
    const fileNames = oldFiles.map((f) => f.name);
    const { error: deleteError } = await supabase.storage
      .from("resumes")
      .remove(fileNames);

    if (deleteError) throw deleteError;

    console.log(`üóëÔ∏è Deleted ${fileNames.length} old resumes.`);

    // 4Ô∏è‚É£ Send email summary
    await sendEmailSummary(fileNames.length, fileNames);

    return new Response(JSON.stringify({ deleted: fileNames.length }), {
      headers: { "Content-Type": "application/json" },
    });
  } catch (err) {
    console.error("‚ùå Cleanup error:", err.message);
    await sendEmailSummary(-1, [], err.message);
    return new Response(JSON.stringify({ error: err.message }), {
      status: 500,
      headers: { "Content-Type": "application/json" },
    });
  }
});

/**
 * üìß Send weekly summary email via SendGrid
 */
async function sendEmailSummary(deletedCount: number, files: string[], errorMsg?: string) {
  try {
    const subject =
      deletedCount === -1
        ? "‚ùå Resume Cleanup Failed"
        : `üßπ Resume Cleanup Summary ‚Äì ${deletedCount} Deleted`;

    const date = new Date().toLocaleString("en-IN", {
      timeZone: "Asia/Kolkata",
      weekday: "long",
      year: "numeric",
      month: "short",
      day: "numeric",
      hour: "2-digit",
      minute: "2-digit",
    });

    let emailBody = `
      <div style="font-family:Inter, system-ui, sans-serif; background:#f9fafb; padding:20px;">
        <div style="max-width:600px;margin:auto;background:white;padding:20px;border-radius:8px;box-shadow:0 2px 8px rgba(0,0,0,0.05);">
          <h2 style="color:#2563eb;">üßπ Techrayos Resume Cleanup Report</h2>
          <p style="color:#374151;">Date: ${date}</p>
          ${
            deletedCount === -1
              ? `<p style="color:#dc2626;"><strong>‚ùå Cleanup failed:</strong> ${errorMsg}</p>`
              : `<p><strong>${deletedCount}</strong> old resumes were deleted from the "resumes" bucket.</p>`
          }
          ${
            files.length > 0
              ? `<ul style="margin-top:12px;padding-left:20px;color:#374151;">
                  ${files.slice(0, 10).map((f) => `<li>${f}</li>`).join("")}
                </ul>
                ${files.length > 10 ? `<p>...and ${files.length - 10} more</p>` : ""}
              `
              : ""
          }
          <p style="margin-top:20px;color:#6b7280;font-size:12px;">
            This email was automatically generated by the Supabase Edge cleanup-resumes function.
          </p>
        </div>
      </div>
    `;

    await fetch("https://api.sendgrid.com/v3/mail/send", {
      method: "POST",
      headers: {
        Authorization: `Bearer ${SENDGRID_API_KEY}`,
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        personalizations: [{ to: [{ email: ADMIN_EMAIL }], subject }],
        from: { email: FROM_EMAIL, name: "Techrayos Bot" },
        content: [{ type: "text/html", value: emailBody }],
      }),
    });

    console.log("üìß Cleanup summary email sent successfully.");
  } catch (err) {
    console.error("‚ùå Failed to send cleanup summary email:", err.message);
  }
}
